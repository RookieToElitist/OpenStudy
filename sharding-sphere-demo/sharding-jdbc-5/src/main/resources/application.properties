#*****************以下配置为读写分离：一主一从***************#

# 让一个实体类对应两张表，不然会报错：
spring.main.allow-bean-definition-overriding=true

##数据分片策略配置##

#配置数据源，给当前数据源起别名
spring.shardingsphere.datasource.names=m0,m1

#数据源具体配置
spring.shardingsphere.datasource.m0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.m0.url=jdbc:mysql://47.103.5.233:3306/sharding_sphere_7?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.m0.username=root
spring.shardingsphere.datasource.m0.password=123456

spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://119.45.6.66:3305/sharding_sphere_7?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=123456

# 主库、从库逻辑数据源定义,ds0表示整个主从库别称，任意起
spring.shardingsphere.sharding.master-slave-rules.ds0.master-data-source-name=m1
spring.shardingsphere.sharding.master-slave-rules.ds0.slave-data-source-names=m0

#表示对当前主从库表操作
spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=ds0.user


# 打开 sql 输出日志
spring.shardingsphere.props.sql.show=true